{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAaC,SAASC,cAAc,kBACpCC,EAAYF,SAASC,cAAc,iBACnCE,EAAcH,SAASC,cAAc,mBACzBD,SAASC,cAAc,UAGzC,SAASG,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAYtC,OAVgB,IAAIC,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAZAN,SAASC,cAAc,QA4C/Ba,iBAAiB,UA1BtB,SAAqBC,GAEnB,GADAA,EAAMC,kBAEHjB,EAAWkB,OAAS,IACpBf,EAAUe,OAAS,IACnBd,EAAYc,OAAS,EAGtB,YADApB,EAAAqB,OAAOC,QAAQ,wCAIjB,IAAIC,GAASrB,EAAWkB,MAExB,IAAKZ,SAAW,EAAGA,WAAaF,EAAYc,MAAOZ,UAAY,EAC7DD,EAAcC,SAAUe,GACrBC,MAAK,EAAChB,SAAEA,EAAQC,MAAEA,MACjBT,EAAAqB,OAAOI,QAAQ,uBAAqBjB,QAAiBC,MAAU,IAEhEiB,OAAM,EAAClB,SAAEA,EAAQC,MAAEA,MAClBT,EAAAqB,OAAOC,QAAQ,sBAAoBd,QAAeC,MAAU,IAGhEc,IAAiBlB,EAAUe,K","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst delayInput = document.querySelector('[name=\"delay\"]');\nconst stepInput = document.querySelector('[name=\"step\"]');\nconst amountInput = document.querySelector('[name=\"amount\"]');\nconst createBtn = document.querySelector('button');\nconst form = document.querySelector('form');\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n\n  return promise;\n}\n\nfunction submitEvent(event) {\n  event.preventDefault();\n  if (\n    +delayInput.value <= 0 ||\n    +stepInput.value <= 0 ||\n    +amountInput.value <= 0\n  ) {\n    Notify.failure(`Select values more than zero please!`);\n    return;\n  }\n\n  let delay = +delayInput.value;\n\n  for (position = 1; position <= +amountInput.value; position += 1) {\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n\n    delay = delay + +stepInput.value;\n  }\n}\n\nform.addEventListener('submit', submitEvent);\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$delayInput","document","querySelector","$47d4ff9957288465$var$stepInput","$47d4ff9957288465$var$amountInput","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","event","preventDefault","value","Notify","failure","delay1","then","success","catch"],"version":3,"file":"03-promises.5da03230.js.map"}
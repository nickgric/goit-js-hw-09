{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAaC,SAASC,cAAc,kBACpCC,EAAYF,SAASC,cAAc,iBACnCE,EAAcH,SAASC,cAAc,mBAErCG,GADYJ,SAASC,cAAc,UAC5BD,SAASC,cAAc,SAEpC,SAASI,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAYtC,OAVgB,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,S,GAEpBA,E,IAkCPH,EAAKW,iBAAiB,UA5BtB,SAAqBC,GAEnB,GADAA,EAAMC,kBAEHlB,EAAWmB,OAAS,IACpBhB,EAAUgB,OAAS,IACnBf,EAAYe,OAAS,EAEtBrB,EAAAsB,OAAOC,QAAS,4CALlB,CAWA,IAFA,IAAIC,GAAStB,EAAWmB,MAEfI,EAAW,EAAGA,IAAanB,EAAYe,MAAOI,GAAY,EACjEjB,EAAciB,EAAUD,GACrBE,MAAK,SAAAC,G,IAAGlB,EAAQkB,EAARlB,SAAUC,EAAKiB,EAALjB,MACjBV,EAAAsB,OAAOM,QAAQ,uBAAwCC,OAAfpB,EAAS,QAAYoB,OAANnB,EAAM,M,IAE9DoB,OAAM,SAAAH,G,IAAGlB,EAAQkB,EAARlB,SAAUC,EAAKiB,EAALjB,MAClBV,EAAAsB,OAAOC,QAAQ,sBAAqCM,OAAfpB,EAAS,QAAYoB,OAANnB,EAAM,M,IAG9Dc,IAAiBnB,EAAUgB,MAG7Bd,EAAKwB,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst delayInput = document.querySelector('[name=\"delay\"]');\nconst stepInput = document.querySelector('[name=\"step\"]');\nconst amountInput = document.querySelector('[name=\"amount\"]');\nconst createBtn = document.querySelector('button');\nconst form = document.querySelector('form');\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n\n  return promise;\n}\n\nfunction submitEvent(event) {\n  event.preventDefault();\n  if (\n    +delayInput.value <= 0 ||\n    +stepInput.value <= 0 ||\n    +amountInput.value <= 0\n  ) {\n    Notify.failure(`Select values more than zero please!`);\n    return;\n  }\n\n  let delay = +delayInput.value;\n\n  for (let position = 1; position <= +amountInput.value; position += 1) {\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n\n    delay = delay + +stepInput.value;\n  }\n\n  form.reset();\n}\n\nform.addEventListener('submit', submitEvent);\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$delayInput","document","querySelector","$ce04d3a99e08e73b$var$stepInput","$ce04d3a99e08e73b$var$amountInput","$ce04d3a99e08e73b$var$form","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","event","preventDefault","value","Notify","failure","delay1","position1","then","param","success","concat","catch","reset"],"version":3,"file":"03-promises.ecd66342.js.map"}